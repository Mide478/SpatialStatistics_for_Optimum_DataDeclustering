setwd("~/Documents/UT/Research/PyCharm/SSADC/Warm Up To be Transferred/Current Scripts/SSADC Multiple Realization Example")
knitr::opts_chunk$set(echo = TRUE)
library(spatstat)
library(jsonlite)
library(rjson)
library(reticulate)
library(sp)
library(maptools)
library(rgeos)
library(KneeArrower)
setwd("~/Documents/UT/Research/PyCharm/SSADC/Warm Up To be Transferred/Current Scripts/SSADC Multiple Realization Example")
data <- fromJSON(file="XYcoords.json")
data <- fromJSON(file="XYcoords.json")
cellsize <- {}
opt_curv <-  {}
for(i in (1:10)){      # 1:max nos of realizations made i.e. the dataset
x<-data[2*i-1]
y<-data[2*i]
x_min <- sapply(x, min)
y_min <- sapply(y, min)
x_max <- sapply(x, max)
y_max <- sapply(y, max)
biased <- ppp(as.numeric(unlist(x)), as.numeric(unlist(y)), c(x_min, x_max), c(y_min, y_max)) # try for x and y ranges c(0,1000)
test_env <- envelope(biased, fun=Lest, correction="best", nsim = 100) #try 1000 bootstrap simulations
df <- data.frame("radius"=test_env$r, "obs"=test_env$obs, "hi"=test_env$hi, "low" =test_env$lo, "theo"=test_env$theo, "diff"=(test_env$obs-test_env$hi))
index <-  match(max(df$diff),df$diff)[1] # gives the first index with the max departure from CSR in case of duplicity
opt_cell <- df$radius[index] # find optimal cell size
cellsize <- append(cellsize, opt_cell) # append optimal cell size to list
cuttoff.point <- findCutoff(df$radius, df$obs, method="curvature") # find maximum curvature
curv <- cuttoff.point[1] #pick radius at max. curvature
opt_curv <- c(opt_curv,curv) # append r_curv to list
}
test <-  do.call(rbind,list(cellsize))
test <- t(test)
test2 <- do.call(rbind,opt_curv)
df_k <-  data.frame(test,test2) # create dataframe
colnames(df_k)<- c("max_dep","max_curv")
rownames(df_k)=NULL #reset row indexes
write.csv(df_k,'cellsizes_Ripley_Multiple_Realizations.csv')
